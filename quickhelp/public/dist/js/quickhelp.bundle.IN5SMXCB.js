(()=>{frappe.provide("quickhelp");quickhelp.UploadFile=function(s){return new Promise((i,r)=>{let e=new XMLHttpRequest;e.upload.addEventListener("loadstart",t=>{frappe.show_alert({indicator:"green",message:__("Uploading file.")})}),e.upload.addEventListener("progress",t=>{t.lengthComputable&&(console.log(`Upload in progress. ${t.loaded} / ${t.total}`),frappe.show_progress("Uploading",t.loaded,t.total,"",!0))}),e.addEventListener("error",t=>{frappe.show_alert({indicator:"red",message:__("Error uploading file.")}),console.log(t),r()}),e.onreadystatechange=()=>{if(e.readyState==XMLHttpRequest.DONE)if(e.status===200){let t=null,o=null;try{t=JSON.parse(e.responseText),t.message.doctype==="File"&&(o=t.message)}catch(l){console.log(e.responseText),frappe.show_alert({indicator:"red",message:__("Error uploading file.")}),r()}i(o.file_url)}else{let t=null;try{t=JSON.parse(e.responseText),console.log(t)}catch(o){console.log(e.responseText)}frappe.show_alert({indicator:"red",message:__("Error uploading file.")}),r()}},e.open("POST","/api/method/upload_file",!0),e.setRequestHeader("Accept","application/json"),e.setRequestHeader("X-Frappe-CSRF-Token",frappe.csrf_token);let a=new FormData;a.append("file",s,`screen-rec-${Date.now()}.mp4`),a.append("is_private",frappe.boot.quickhelp_file_type),a.append("folder","Home/QuickHelp"),e.send(a)})};frappe.provide("quickhelp");quickhelp.chunks=[];quickhelp.blob=null;quickhelp.blobURL=null;quickhelp.SupportTicket=class{constructor(){if(!frappe.boot.quickhelp_support_enabled){frappe.msgprint(__("Support is not enabled for this site. Please contact Administrator."));return}this.init_config(),this.setup_dialog(),this.dialog.show()}setup_dialog(){this.dialog=new frappe.ui.Dialog({title:__("Create Support Ticket"),size:"large",minimizable:!0,static:!0,fields:[{fieldname:"ticket_title",label:__("Subject"),fieldtype:"Data",reqd:1},{fieldname:"ticket_module",label:__("Module"),fieldtype:"Select",options:`
Accounts
Buying
Selling
Stock
HRMS
Project
Asset`,reqd:1},{fieldname:"ticket_description",label:__("Description"),fieldtype:"Text Editor",reqd:1},{fieldtype:"Section Break",label:__("Screen Recording")},{fieldtype:"Column Break"},{fieldname:"view_recording",label:__("View Recording"),fieldtype:"Button",hidden:1,click:()=>{window.open(quickhelp.blobURL,"_blank")}},{fieldname:"clear_recording",label:__("Clear Recording"),fieldtype:"Button",hidden:1,click:()=>{if(this.recorder&&this.recorder.state=="recording"){frappe.show_alert({indicator:"red",message:__("Please stop the recording before clearing.")});return}quickhelp.chunks=[],quickhelp.blob=null,quickhelp.blobURL=null,this.dialog.set_df_property("record_screen","label","Start Recording"),this.dialog.set_df_property("view_recording","hidden",1),this.dialog.set_df_property("clear_recording","hidden",1),frappe.show_alert({indicator:"green",message:__("Screen recording have been cleared.")})}}],primary_action_label:__("Create Ticket"),primary_action:i=>{if(this.recorder&&this.recorder.state=="recording"){frappe.show_alert({indicator:"red",message:__("Please stop the recording before creating the ticket.")});return}this.raise_ticket(i)},secondary_action_label:__("Cancel"),secondary_action:()=>{if(this.recorder&&this.recorder.state=="recording"){frappe.show_alert({indicator:"red",message:__("Please stop the recording before cancelling.")});return}this.dialog.hide()}}),this.dialog.$wrapper.find(".modal-dialog").css("z-index",1),this.dialog.get_minimize_btn().addClass("pr-3")}setIndicator(i){this.dialog.header.find(".indicator").css({width:"1rem",height:"1rem"}).removeClass().addClass("indicator "+(i||"hidden"))}async raise_ticket(i){if(console.log("Correct js"),console.log(this.inUpload),this.inUpload)return;this.inUpload=!0;let r=null;if(quickhelp.blob&&(frappe.show_alert({indicator:"yellow",message:__("Raising ticket. Please wait...")}),r=await this.blobToBase64(quickhelp.blob),r=await quickhelp.UploadFile(quickhelp.blob),!r)){frappe.show_alert({indicator:"red",message:__("Error Creating Ticket. Please try again.")}),this.inUpload=!1;return}this.inUpload=!1,frappe.call({method:"quickhelp.utils.support.create_ticket",type:"POST",args:{title:i.ticket_title,raised_by:frappe.session.user,ticket_module:i.ticket_module,description:i.ticket_description,screen_recording:r},freeze:!0,freeze_message:__("Creating ticket..."),callback:e=>{!e.exc&&e.message&&(frappe.show_alert({indicator:"green",message:__("Ticket created successfully")}),this.dialog.hide(),frappe.msgprint(__(`Your ticket(#${e.message}) has been created successfully. You will be notified once it is resolved.`)))}})}init_config(){this.stream=null,this.audio=null,this.mixedStream=null,this.recorder=null,this.recordedVideo=null,this.inUpload=!1,quickhelp.chunks=[],quickhelp.blob=null,quickhelp.blobURL=null,this.maxFileSizeInBytes=frappe.boot.quickhelp_max_file_size*1024*1024,this.sizeWarning=frappe.boot.quickhelp_max_file_size/4*1024*1024,this.nextWarningSize=this.sizeWarning}async setupStream(){try{this.stream=await navigator.mediaDevices.getDisplayMedia({video:!0}),this.audio=await navigator.mediaDevices.getUserMedia({audio:{echoCancellation:!0,noiseSuppression:!0,sampleRate:44100}})}catch(i){console.error(i)}}async startRecording(){await this.setupStream(),this.stream&&this.audio?(quickhelp.chunks=[],this.mixedStream=new MediaStream([...this.stream.getTracks(),...this.audio.getTracks()]),this.recorder=new MediaRecorder(this.mixedStream),this.recorder.ondataavailable=i=>{quickhelp.chunks.push(i.data),this.checkFileSize()},this.recorder.onstop=this.handleStop,this.recorder.start(1e3),console.log("Recording started"),this.setIndicator("spinner-grow text-danger align-self-center mr-2"),this.dialog.set_df_property("record_screen","label","Stop Recording"),this.dialog.set_df_property("view_recording","hidden",1),this.dialog.set_df_property("clear_recording","hidden",1),frappe.show_alert({indicator:"green",message:__('Screen recording has started. Please click on "Stop Recording" once you are done.')})):(console.warn("No stream available."),frappe.show_alert({indicator:"red",message:__("Error starting screen recording. Please try again.")}))}stopRecording(){this.recorder.stop(),this.setIndicator(),this.dialog.set_df_property("record_screen","label","Start Recording"),this.dialog.set_df_property("view_recording","hidden",0),this.dialog.set_df_property("clear_recording","hidden",0),frappe.show_alert({indicator:"green",message:__('Screen recording has stopped. Please click on "View Recording" to view the recording.')})}checkFileSize(){let i=quickhelp.chunks.reduce((r,e)=>r+e.size,0);if(i>=this.maxFileSizeInBytes){frappe.show_alert({indicator:"red",message:__("Screen recording size has exceeded the maximum allowed size. Recording has been stopped.")}),this.stopRecording();return}i>=this.nextWarningSize&&(frappe.show_alert({indicator:"yellow",message:__(`Screen recording size has exceeded ${(i/(1024*1024)).toFixed(1)}MB.`)}),this.nextWarningSize+=this.sizeWarning)}handleStop(i){quickhelp.blob=new Blob(quickhelp.chunks,{type:"video/mp4"}),quickhelp.blobURL=URL.createObjectURL(quickhelp.blob),this.stream.getTracks().forEach(r=>r.stop()),this.audio&&this.audio.getTracks().forEach(r=>r.stop()),console.log("Recording stopped")}blobToBase64(i){return new Promise((r,e)=>{let a=new FileReader;a.onloadend=function(){let o=a.result.split(",")[1];r(o)},a.readAsDataURL(i)})}};})();
//# sourceMappingURL=quickhelp.bundle.IN5SMXCB.js.map
